name: k8s deployment validation
on:
  pull_request:
    paths:
      - 'deployment/*'

jobs:
  check-k8s:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test
        uses: vetyy/kubeval-action@master
        with:
          strict: true
          files: ./deployment
          ignore_missing_schemas: false
          additional_schema_locations: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/

  run-k8s-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Start minikube
        uses: meroxa/setup-minikube@master
        with:
          minikube-version: 1.24.0
      - name: run k8s deployment on the cluster
        run: |
          namespace=monocle
          kubectl create namespace "${namespace}" 
          kubectl create --namespace "${namespace}" --filename ./deployment/ 
      - name: validate components have been deployed successfuly
        run: |
          namespace=monocle
          deploy_pod_labels_raw=$(kubectl get --namespace "${namespace}" --filename ./deployment/elastic-deployment.yaml --output go-template='{{ range $k, $v :=.spec.selector.matchLabels }}{{$k}}={{$v}},{{ end }}')
          deploy_pod_labels_elastic=$(echo "${deploy_pod_labels_raw}" | rev | cut --delimiter=',' --fields='2-' | rev)

          while [[ $(kubectl get po --namespace "${namespace}" --no-headers 2>/dev/null | wc -l) -eq  0 ]]; do
            echo -n "."
            sleep 1s
          done
          echo

          kubectl wait --for=condition=Ready --namespace "${namespace}" pods --selector "${deploy_pod_labels_elastic}" --timeout=2m
          kubectl wait --for=condition=Ready --namespace "${namespace}" pods --all
      - name: validate crawler legacy
        run: |
          namespace=monocle
          kubectl create --namespace "${namespace}" job test  --from $( kubectl get --namespace ${namespace} -f ./deployment/crawler-legacy-cronjob.yaml --output name) 
          kubectl wait --for=condition=complete --namespace "${namespace}" job/test 

      - name: Display indexes
        run: |
          namespace=monocle
          kubectl port-forward --namespace "${namespace}" $( kubectl get --namespace "${namespace}" -f deployment/elastic-service.yaml --output name) 9200:9200 &
          sleep 5s

          curl -s -I -X GET http://localhost:9200/_cat/indices

          kill %1
      - name: Check api service through nginx
        run: |
          namespace=monocle
          kubectl port-forward --namespace "${namespace}" $( kubectl get --namespace "${namespace}" -f deployment/web-service.yaml --output name) 8080:8080 &
          sleep 5s

          curl -s --fail -H 'Content-type: application/json' http://localhost:8080/api/2/get_workspaces -d '{}' | grep 'workspaces'
          kill %1
      - name: Check web service to fetch web app
        run: |
          namespace=monocle
          kubectl port-forward --namespace "${namespace}" $( kubectl get --namespace "${namespace}" -f deployment/web-service.yaml --output name) 8080:8080 &
          sleep 5s

          curl -s http://localhost:8080/index.html | grep 'window.TITLE'

          kill %1

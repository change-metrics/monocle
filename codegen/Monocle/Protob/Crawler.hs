{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# LANGUAGE NoGeneralisedNewtypeDeriving #-}
{-# OPTIONS_GHC -fno-warn-missing-export-lists #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Monocle.Protob.Crawler where

import Control.Applicative ((<$>), (<*>), (<|>))
import qualified Control.Applicative as Hs
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty (..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Google.Protobuf.Timestamp
import qualified Monocle.Protob.Change
import qualified Monocle.Protob.Search
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import Proto3.Suite.JSONPB ((.:), (.=))
import qualified Proto3.Suite.JSONPB as HsJSONPB
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Unsafe.Coerce as Hs
import qualified Prelude as Hs

newtype Entity = Entity {entityEntity :: Hs.Maybe EntityEntity}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Entity where
  nameOf _ = (Hs.fromString "Entity")

instance HsProtobuf.HasDefault Entity

instance HsProtobuf.Message Entity where
  encodeMessage _ Entity {entityEntity = entityEntity} =
    ( Hs.mconcat
        [ case entityEntity of
            Hs.Nothing -> Hs.mempty
            Hs.Just x ->
              case x of
                EntityEntityOrganizationName y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 1)
                      (HsProtobuf.ForceEmit y)
                  )
                EntityEntityProjectName y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 2)
                      (HsProtobuf.ForceEmit y)
                  )
                EntityEntityTdName y ->
                  ( HsProtobuf.encodeMessageField
                      (HsProtobuf.FieldNumber 3)
                      (HsProtobuf.ForceEmit y)
                  )
        ]
    )
  decodeMessage _ =
    (Hs.pure Entity)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.Just Hs.. EntityEntityOrganizationName))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.Just Hs.. EntityEntityProjectName))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 3),
                  (Hs.pure (Hs.Just Hs.. EntityEntityTdName))
                    <*> HsProtobuf.decodeMessageField
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB Entity where
  toJSONPB (Entity f1_or_f2_or_f3) =
    ( HsJSONPB.object
        [ ( let encodeEntity =
                  ( case f1_or_f2_or_f3 of
                      Hs.Just (EntityEntityOrganizationName f1) ->
                        (HsJSONPB.pair "organization_name" f1)
                      Hs.Just (EntityEntityProjectName f2) ->
                        (HsJSONPB.pair "project_name" f2)
                      Hs.Just (EntityEntityTdName f3) -> (HsJSONPB.pair "td_name" f3)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("entity" .= (HsJSONPB.objectOrNull [encodeEntity] options))
                        options
                    else encodeEntity options
          )
        ]
    )
  toEncodingPB (Entity f1_or_f2_or_f3) =
    ( HsJSONPB.pairs
        [ ( let encodeEntity =
                  ( case f1_or_f2_or_f3 of
                      Hs.Just (EntityEntityOrganizationName f1) ->
                        (HsJSONPB.pair "organization_name" f1)
                      Hs.Just (EntityEntityProjectName f2) ->
                        (HsJSONPB.pair "project_name" f2)
                      Hs.Just (EntityEntityTdName f3) -> (HsJSONPB.pair "td_name" f3)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("entity" .= (HsJSONPB.pairsOrNull [encodeEntity] options)) options
                    else encodeEntity options
          )
        ]
    )

instance HsJSONPB.FromJSONPB Entity where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Entity"
        ( \obj ->
            (Hs.pure Entity)
              <*> ( let parseEntity parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. EntityEntityOrganizationName
                                <$> (HsJSONPB.parseField parseObj "organization_name"),
                              Hs.Just Hs.. EntityEntityProjectName
                                <$> (HsJSONPB.parseField parseObj "project_name"),
                              Hs.Just Hs.. EntityEntityTdName
                                <$> (HsJSONPB.parseField parseObj "td_name"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "entity")
                            Hs.>>= (HsJSONPB.withObject "entity" parseEntity)
                        )
                          <|> (parseEntity obj)
                  )
        )
    )

instance HsJSONPB.ToJSON Entity where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Entity where
  parseJSON = HsJSONPB.parseJSONPB

data EntityEntity
  = EntityEntityOrganizationName Hs.Text
  | EntityEntityProjectName Hs.Text
  | EntityEntityTdName Hs.Text
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named EntityEntity where
  nameOf _ = (Hs.fromString "EntityEntity")

data AddDocRequest = AddDocRequest
  { addDocRequestIndex :: Hs.Text,
    addDocRequestCrawler :: Hs.Text,
    addDocRequestApikey :: Hs.Text,
    addDocRequestEntity :: Hs.Maybe Monocle.Protob.Crawler.Entity,
    addDocRequestChanges :: Hs.Vector Monocle.Protob.Change.Change,
    addDocRequestEvents ::
      Hs.Vector Monocle.Protob.Change.ChangeEvent,
    addDocRequestProjects ::
      Hs.Vector Monocle.Protob.Crawler.Project,
    addDocRequestTaskDatas ::
      Hs.Vector Monocle.Protob.Search.TaskData
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AddDocRequest where
  nameOf _ = (Hs.fromString "AddDocRequest")

instance HsProtobuf.HasDefault AddDocRequest

instance HsProtobuf.Message AddDocRequest where
  encodeMessage
    _
    AddDocRequest
      { addDocRequestIndex = addDocRequestIndex,
        addDocRequestCrawler = addDocRequestCrawler,
        addDocRequestApikey = addDocRequestApikey,
        addDocRequestEntity = addDocRequestEntity,
        addDocRequestChanges = addDocRequestChanges,
        addDocRequestEvents = addDocRequestEvents,
        addDocRequestProjects = addDocRequestProjects,
        addDocRequestTaskDatas = addDocRequestTaskDatas
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                addDocRequestIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                addDocRequestCrawler
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                addDocRequestApikey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Maybe Monocle.Protob.Crawler.Entity)
                    @(HsProtobuf.Nested Monocle.Protob.Crawler.Entity)
                    addDocRequestEntity
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce @(Hs.Vector Monocle.Protob.Change.Change)
                    @(HsProtobuf.NestedVec Monocle.Protob.Change.Change)
                    addDocRequestChanges
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                ( Hs.coerce @(Hs.Vector Monocle.Protob.Change.ChangeEvent)
                    @(HsProtobuf.NestedVec Monocle.Protob.Change.ChangeEvent)
                    addDocRequestEvents
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 7)
                ( Hs.coerce @(Hs.Vector Monocle.Protob.Crawler.Project)
                    @(HsProtobuf.NestedVec Monocle.Protob.Crawler.Project)
                    addDocRequestProjects
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 8)
                ( Hs.coerce @(Hs.Vector Monocle.Protob.Search.TaskData)
                    @(HsProtobuf.NestedVec Monocle.Protob.Search.TaskData)
                    addDocRequestTaskDatas
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure AddDocRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested Monocle.Protob.Crawler.Entity))
              @(_ (Hs.Maybe Monocle.Protob.Crawler.Entity))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.NestedVec Monocle.Protob.Change.Change))
              @(_ (Hs.Vector Monocle.Protob.Change.Change))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Protob.Change.ChangeEvent))
              @(_ (Hs.Vector Monocle.Protob.Change.ChangeEvent))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 6)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Protob.Crawler.Project))
              @(_ (Hs.Vector Monocle.Protob.Crawler.Project))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.NestedVec Monocle.Protob.Search.TaskData))
              @(_ (Hs.Vector Monocle.Protob.Search.TaskData))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "crawler")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "apikey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Entity")))
          (HsProtobuf.Single "entity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          ( HsProtobuf.Repeated
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("monocle_change" Hs.:| ["Change"]))
                  )
              )
          )
          (HsProtobuf.Single "changes")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 6)
          ( HsProtobuf.Repeated
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("monocle_change" Hs.:| ["ChangeEvent"]))
                  )
              )
          )
          (HsProtobuf.Single "events")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 7)
          ( HsProtobuf.Repeated
              (HsProtobuf.Named (HsProtobuf.Single "Project"))
          )
          (HsProtobuf.Single "projects")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 8)
          ( HsProtobuf.Repeated
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("monocle_search" Hs.:| ["TaskData"]))
                  )
              )
          )
          (HsProtobuf.Single "task_datas")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB AddDocRequest where
  toJSONPB (AddDocRequest f1 f2 f3 f4 f5 f6 f7 f8) =
    ( HsJSONPB.object
        [ "index" .= f1,
          "crawler" .= f2,
          "apikey" .= f3,
          "entity" .= f4,
          "changes" .= f5,
          "events" .= f6,
          "projects" .= f7,
          "task_datas" .= f8
        ]
    )
  toEncodingPB (AddDocRequest f1 f2 f3 f4 f5 f6 f7 f8) =
    ( HsJSONPB.pairs
        [ "index" .= f1,
          "crawler" .= f2,
          "apikey" .= f3,
          "entity" .= f4,
          "changes" .= f5,
          "events" .= f6,
          "projects" .= f7,
          "task_datas" .= f8
        ]
    )

instance HsJSONPB.FromJSONPB AddDocRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "AddDocRequest"
        ( \obj ->
            (Hs.pure AddDocRequest) <*> obj .: "index" <*> obj .: "crawler"
              <*> obj .: "apikey"
              <*> obj .: "entity"
              <*> obj .: "changes"
              <*> obj .: "events"
              <*> obj .: "projects"
              <*> obj .: "task_datas"
        )
    )

instance HsJSONPB.ToJSON AddDocRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AddDocRequest where
  parseJSON = HsJSONPB.parseJSONPB

data AddDocError
  = AddDocErrorAddUnknownIndex
  | AddDocErrorAddUnknownCrawler
  | AddDocErrorAddUnknownApiKey
  | AddDocErrorAddFailed
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AddDocError where
  nameOf _ = (Hs.fromString "AddDocError")

instance HsProtobuf.HasDefault AddDocError

instance Hs.Bounded AddDocError where
  minBound = AddDocErrorAddUnknownIndex
  maxBound = AddDocErrorAddFailed

instance Hs.Ord AddDocError where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum AddDocError where
  toProtoEnumMay 0 = Hs.Just AddDocErrorAddUnknownIndex
  toProtoEnumMay 1 = Hs.Just AddDocErrorAddUnknownCrawler
  toProtoEnumMay 2 = Hs.Just AddDocErrorAddUnknownApiKey
  toProtoEnumMay 3 = Hs.Just AddDocErrorAddFailed
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (AddDocErrorAddUnknownIndex) = 0
  fromProtoEnum (AddDocErrorAddUnknownCrawler) = 1
  fromProtoEnum (AddDocErrorAddUnknownApiKey) = 2
  fromProtoEnum (AddDocErrorAddFailed) = 3

instance HsJSONPB.ToJSONPB AddDocError where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB AddDocError where
  parseJSONPB (HsJSONPB.String "AddUnknownIndex") =
    Hs.pure AddDocErrorAddUnknownIndex
  parseJSONPB (HsJSONPB.String "AddUnknownCrawler") =
    Hs.pure AddDocErrorAddUnknownCrawler
  parseJSONPB (HsJSONPB.String "AddUnknownApiKey") =
    Hs.pure AddDocErrorAddUnknownApiKey
  parseJSONPB (HsJSONPB.String "AddFailed") =
    Hs.pure AddDocErrorAddFailed
  parseJSONPB v = (HsJSONPB.typeMismatch "AddDocError" v)

instance HsJSONPB.ToJSON AddDocError where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AddDocError where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite AddDocError

newtype AddDocResponse = AddDocResponse
  { addDocResponseResult ::
      Hs.Maybe AddDocResponseResult
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AddDocResponse where
  nameOf _ = (Hs.fromString "AddDocResponse")

instance HsProtobuf.HasDefault AddDocResponse

instance HsProtobuf.Message AddDocResponse where
  encodeMessage
    _
    AddDocResponse {addDocResponseResult = addDocResponseResult} =
      ( Hs.mconcat
          [ case addDocResponseResult of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  AddDocResponseResultError y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        (HsProtobuf.ForceEmit y)
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure AddDocResponse)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.Just Hs.. AddDocResponseResultError))
                    <*> HsProtobuf.decodeMessageField
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB AddDocResponse where
  toJSONPB (AddDocResponse f1) =
    ( HsJSONPB.object
        [ ( let encodeResult =
                  ( case f1 of
                      Hs.Just (AddDocResponseResultError f1) ->
                        (HsJSONPB.pair "error" f1)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("result" .= (HsJSONPB.objectOrNull [encodeResult] options))
                        options
                    else encodeResult options
          )
        ]
    )
  toEncodingPB (AddDocResponse f1) =
    ( HsJSONPB.pairs
        [ ( let encodeResult =
                  ( case f1 of
                      Hs.Just (AddDocResponseResultError f1) ->
                        (HsJSONPB.pair "error" f1)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("result" .= (HsJSONPB.pairsOrNull [encodeResult] options)) options
                    else encodeResult options
          )
        ]
    )

instance HsJSONPB.FromJSONPB AddDocResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "AddDocResponse"
        ( \obj ->
            (Hs.pure AddDocResponse)
              <*> ( let parseResult parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. AddDocResponseResultError
                                <$> (HsJSONPB.parseField parseObj "error"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "result")
                            Hs.>>= (HsJSONPB.withObject "result" parseResult)
                        )
                          <|> (parseResult obj)
                  )
        )
    )

instance HsJSONPB.ToJSON AddDocResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AddDocResponse where
  parseJSON = HsJSONPB.parseJSONPB

data AddDocResponseResult
  = AddDocResponseResultError
      ( HsProtobuf.Enumerated
          Monocle.Protob.Crawler.AddDocError
      )
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named AddDocResponseResult where
  nameOf _ = (Hs.fromString "AddDocResponseResult")

data CommitRequest = CommitRequest
  { commitRequestIndex :: Hs.Text,
    commitRequestCrawler :: Hs.Text,
    commitRequestApikey :: Hs.Text,
    commitRequestEntity :: Hs.Maybe Monocle.Protob.Crawler.Entity,
    commitRequestTimestamp ::
      Hs.Maybe Google.Protobuf.Timestamp.Timestamp
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitRequest where
  nameOf _ = (Hs.fromString "CommitRequest")

instance HsProtobuf.HasDefault CommitRequest

instance HsProtobuf.Message CommitRequest where
  encodeMessage
    _
    CommitRequest
      { commitRequestIndex = commitRequestIndex,
        commitRequestCrawler = commitRequestCrawler,
        commitRequestApikey = commitRequestApikey,
        commitRequestEntity = commitRequestEntity,
        commitRequestTimestamp = commitRequestTimestamp
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                commitRequestIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                commitRequestCrawler
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                commitRequestApikey
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( Hs.coerce @(Hs.Maybe Monocle.Protob.Crawler.Entity)
                    @(HsProtobuf.Nested Monocle.Protob.Crawler.Entity)
                    commitRequestEntity
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                    @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                    commitRequestTimestamp
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure CommitRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 3)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested Monocle.Protob.Crawler.Entity))
              @(_ (Hs.Maybe Monocle.Protob.Crawler.Entity))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
              @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "crawler")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "apikey")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Entity")))
          (HsProtobuf.Single "entity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 5)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"]))
                  )
              )
          )
          (HsProtobuf.Single "timestamp")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB CommitRequest where
  toJSONPB (CommitRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.object
        [ "index" .= f1,
          "crawler" .= f2,
          "apikey" .= f3,
          "entity" .= f4,
          "timestamp" .= f5
        ]
    )
  toEncodingPB (CommitRequest f1 f2 f3 f4 f5) =
    ( HsJSONPB.pairs
        [ "index" .= f1,
          "crawler" .= f2,
          "apikey" .= f3,
          "entity" .= f4,
          "timestamp" .= f5
        ]
    )

instance HsJSONPB.FromJSONPB CommitRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CommitRequest"
        ( \obj ->
            (Hs.pure CommitRequest) <*> obj .: "index" <*> obj .: "crawler"
              <*> obj .: "apikey"
              <*> obj .: "entity"
              <*> obj .: "timestamp"
        )
    )

instance HsJSONPB.ToJSON CommitRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitRequest where
  parseJSON = HsJSONPB.parseJSONPB

data CommitError
  = CommitErrorCommitUnknownIndex
  | CommitErrorCommitUnknownCrawler
  | CommitErrorCommitUnknownApiKey
  | CommitErrorCommitDateInferiorThanPrevious
  | CommitErrorCommitDateMissing
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitError where
  nameOf _ = (Hs.fromString "CommitError")

instance HsProtobuf.HasDefault CommitError

instance Hs.Bounded CommitError where
  minBound = CommitErrorCommitUnknownIndex
  maxBound = CommitErrorCommitDateMissing

instance Hs.Ord CommitError where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum CommitError where
  toProtoEnumMay 0 = Hs.Just CommitErrorCommitUnknownIndex
  toProtoEnumMay 1 = Hs.Just CommitErrorCommitUnknownCrawler
  toProtoEnumMay 2 = Hs.Just CommitErrorCommitUnknownApiKey
  toProtoEnumMay 3 =
    Hs.Just CommitErrorCommitDateInferiorThanPrevious
  toProtoEnumMay 4 = Hs.Just CommitErrorCommitDateMissing
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (CommitErrorCommitUnknownIndex) = 0
  fromProtoEnum (CommitErrorCommitUnknownCrawler) = 1
  fromProtoEnum (CommitErrorCommitUnknownApiKey) = 2
  fromProtoEnum (CommitErrorCommitDateInferiorThanPrevious) = 3
  fromProtoEnum (CommitErrorCommitDateMissing) = 4

instance HsJSONPB.ToJSONPB CommitError where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB CommitError where
  parseJSONPB (HsJSONPB.String "CommitUnknownIndex") =
    Hs.pure CommitErrorCommitUnknownIndex
  parseJSONPB (HsJSONPB.String "CommitUnknownCrawler") =
    Hs.pure CommitErrorCommitUnknownCrawler
  parseJSONPB (HsJSONPB.String "CommitUnknownApiKey") =
    Hs.pure CommitErrorCommitUnknownApiKey
  parseJSONPB (HsJSONPB.String "CommitDateInferiorThanPrevious") =
    Hs.pure CommitErrorCommitDateInferiorThanPrevious
  parseJSONPB (HsJSONPB.String "CommitDateMissing") =
    Hs.pure CommitErrorCommitDateMissing
  parseJSONPB v = (HsJSONPB.typeMismatch "CommitError" v)

instance HsJSONPB.ToJSON CommitError where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitError where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite CommitError

newtype CommitResponse = CommitResponse
  { commitResponseResult ::
      Hs.Maybe CommitResponseResult
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitResponse where
  nameOf _ = (Hs.fromString "CommitResponse")

instance HsProtobuf.HasDefault CommitResponse

instance HsProtobuf.Message CommitResponse where
  encodeMessage
    _
    CommitResponse {commitResponseResult = commitResponseResult} =
      ( Hs.mconcat
          [ case commitResponseResult of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  CommitResponseResultError y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        (HsProtobuf.ForceEmit y)
                    )
                  CommitResponseResultTimestamp y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                            @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                            (Hs.Just y)
                        )
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure CommitResponse)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.Just Hs.. CommitResponseResultError))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.fmap CommitResponseResultTimestamp))
                    <*> ( Hs.coerce
                            @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
                            @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB CommitResponse where
  toJSONPB (CommitResponse f1_or_f2) =
    ( HsJSONPB.object
        [ ( let encodeResult =
                  ( case f1_or_f2 of
                      Hs.Just (CommitResponseResultError f1) ->
                        (HsJSONPB.pair "error" f1)
                      Hs.Just (CommitResponseResultTimestamp f2) ->
                        (HsJSONPB.pair "timestamp" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("result" .= (HsJSONPB.objectOrNull [encodeResult] options))
                        options
                    else encodeResult options
          )
        ]
    )
  toEncodingPB (CommitResponse f1_or_f2) =
    ( HsJSONPB.pairs
        [ ( let encodeResult =
                  ( case f1_or_f2 of
                      Hs.Just (CommitResponseResultError f1) ->
                        (HsJSONPB.pair "error" f1)
                      Hs.Just (CommitResponseResultTimestamp f2) ->
                        (HsJSONPB.pair "timestamp" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("result" .= (HsJSONPB.pairsOrNull [encodeResult] options)) options
                    else encodeResult options
          )
        ]
    )

instance HsJSONPB.FromJSONPB CommitResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CommitResponse"
        ( \obj ->
            (Hs.pure CommitResponse)
              <*> ( let parseResult parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. CommitResponseResultError
                                <$> (HsJSONPB.parseField parseObj "error"),
                              Hs.Just Hs.. CommitResponseResultTimestamp
                                <$> (HsJSONPB.parseField parseObj "timestamp"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "result")
                            Hs.>>= (HsJSONPB.withObject "result" parseResult)
                        )
                          <|> (parseResult obj)
                  )
        )
    )

instance HsJSONPB.ToJSON CommitResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitResponse where
  parseJSON = HsJSONPB.parseJSONPB

data CommitResponseResult
  = CommitResponseResultError
      ( HsProtobuf.Enumerated
          Monocle.Protob.Crawler.CommitError
      )
  | CommitResponseResultTimestamp Google.Protobuf.Timestamp.Timestamp
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitResponseResult where
  nameOf _ = (Hs.fromString "CommitResponseResult")

data CommitInfoRequest = CommitInfoRequest
  { commitInfoRequestIndex ::
      Hs.Text,
    commitInfoRequestCrawler :: Hs.Text,
    commitInfoRequestEntity ::
      Hs.Maybe Monocle.Protob.Crawler.Entity,
    commitInfoRequestOffset :: Hs.Word32
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitInfoRequest where
  nameOf _ = (Hs.fromString "CommitInfoRequest")

instance HsProtobuf.HasDefault CommitInfoRequest

instance HsProtobuf.Message CommitInfoRequest where
  encodeMessage
    _
    CommitInfoRequest
      { commitInfoRequestIndex = commitInfoRequestIndex,
        commitInfoRequestCrawler = commitInfoRequestCrawler,
        commitInfoRequestEntity = commitInfoRequestEntity,
        commitInfoRequestOffset = commitInfoRequestOffset
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                commitInfoRequestIndex
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                commitInfoRequestCrawler
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 3)
                ( Hs.coerce @(Hs.Maybe Monocle.Protob.Crawler.Entity)
                    @(HsProtobuf.Nested Monocle.Protob.Crawler.Entity)
                    commitInfoRequestEntity
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                commitInfoRequestOffset
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure CommitInfoRequest)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 2)
          )
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested Monocle.Protob.Crawler.Entity))
              @(_ (Hs.Maybe Monocle.Protob.Crawler.Entity))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 4)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "index")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "crawler")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 3)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Entity")))
          (HsProtobuf.Single "entity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 4)
          (HsProtobuf.Prim HsProtobuf.UInt32)
          (HsProtobuf.Single "offset")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB CommitInfoRequest where
  toJSONPB (CommitInfoRequest f1 f2 f3 f4) =
    ( HsJSONPB.object
        ["index" .= f1, "crawler" .= f2, "entity" .= f3, "offset" .= f4]
    )
  toEncodingPB (CommitInfoRequest f1 f2 f3 f4) =
    ( HsJSONPB.pairs
        ["index" .= f1, "crawler" .= f2, "entity" .= f3, "offset" .= f4]
    )

instance HsJSONPB.FromJSONPB CommitInfoRequest where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CommitInfoRequest"
        ( \obj ->
            (Hs.pure CommitInfoRequest) <*> obj .: "index" <*> obj .: "crawler"
              <*> obj .: "entity"
              <*> obj .: "offset"
        )
    )

instance HsJSONPB.ToJSON CommitInfoRequest where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitInfoRequest where
  parseJSON = HsJSONPB.parseJSONPB

data CommitInfoError
  = CommitInfoErrorCommitGetUnknownIndex
  | CommitInfoErrorCommitGetUnknownCrawler
  | CommitInfoErrorCommitGetNoEntity
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitInfoError where
  nameOf _ = (Hs.fromString "CommitInfoError")

instance HsProtobuf.HasDefault CommitInfoError

instance Hs.Bounded CommitInfoError where
  minBound = CommitInfoErrorCommitGetUnknownIndex
  maxBound = CommitInfoErrorCommitGetNoEntity

instance Hs.Ord CommitInfoError where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum CommitInfoError where
  toProtoEnumMay 0 = Hs.Just CommitInfoErrorCommitGetUnknownIndex
  toProtoEnumMay 1 = Hs.Just CommitInfoErrorCommitGetUnknownCrawler
  toProtoEnumMay 2 = Hs.Just CommitInfoErrorCommitGetNoEntity
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum (CommitInfoErrorCommitGetUnknownIndex) = 0
  fromProtoEnum (CommitInfoErrorCommitGetUnknownCrawler) = 1
  fromProtoEnum (CommitInfoErrorCommitGetNoEntity) = 2

instance HsJSONPB.ToJSONPB CommitInfoError where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB CommitInfoError where
  parseJSONPB (HsJSONPB.String "CommitGetUnknownIndex") =
    Hs.pure CommitInfoErrorCommitGetUnknownIndex
  parseJSONPB (HsJSONPB.String "CommitGetUnknownCrawler") =
    Hs.pure CommitInfoErrorCommitGetUnknownCrawler
  parseJSONPB (HsJSONPB.String "CommitGetNoEntity") =
    Hs.pure CommitInfoErrorCommitGetNoEntity
  parseJSONPB v = (HsJSONPB.typeMismatch "CommitInfoError" v)

instance HsJSONPB.ToJSON CommitInfoError where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitInfoError where
  parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite CommitInfoError

newtype CommitInfoResponse = CommitInfoResponse
  { commitInfoResponseResult ::
      Hs.Maybe CommitInfoResponseResult
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitInfoResponse where
  nameOf _ = (Hs.fromString "CommitInfoResponse")

instance HsProtobuf.HasDefault CommitInfoResponse

instance HsProtobuf.Message CommitInfoResponse where
  encodeMessage
    _
    CommitInfoResponse
      { commitInfoResponseResult =
          commitInfoResponseResult
      } =
      ( Hs.mconcat
          [ case commitInfoResponseResult of
              Hs.Nothing -> Hs.mempty
              Hs.Just x ->
                case x of
                  CommitInfoResponseResultError y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        (HsProtobuf.ForceEmit y)
                    )
                  CommitInfoResponseResultEntity y ->
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( Hs.coerce
                            @(Hs.Maybe Monocle.Protob.Crawler.CommitInfoResponse_OldestEntity)
                            @(HsProtobuf.Nested Monocle.Protob.Crawler.CommitInfoResponse_OldestEntity)
                            (Hs.Just y)
                        )
                    )
          ]
      )
  decodeMessage _ =
    (Hs.pure CommitInfoResponse)
      <*> ( HsProtobuf.oneof
              Hs.Nothing
              [ ( (HsProtobuf.FieldNumber 1),
                  (Hs.pure (Hs.Just Hs.. CommitInfoResponseResultError))
                    <*> HsProtobuf.decodeMessageField
                ),
                ( (HsProtobuf.FieldNumber 2),
                  (Hs.pure (Hs.fmap CommitInfoResponseResultEntity))
                    <*> ( Hs.coerce
                            @(_ (HsProtobuf.Nested Monocle.Protob.Crawler.CommitInfoResponse_OldestEntity))
                            @(_ (Hs.Maybe Monocle.Protob.Crawler.CommitInfoResponse_OldestEntity))
                            HsProtobuf.decodeMessageField
                        )
                )
              ]
          )
  dotProto _ = []

instance HsJSONPB.ToJSONPB CommitInfoResponse where
  toJSONPB (CommitInfoResponse f1_or_f2) =
    ( HsJSONPB.object
        [ ( let encodeResult =
                  ( case f1_or_f2 of
                      Hs.Just (CommitInfoResponseResultError f1) ->
                        (HsJSONPB.pair "error" f1)
                      Hs.Just (CommitInfoResponseResultEntity f2) ->
                        (HsJSONPB.pair "entity" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then
                      ("result" .= (HsJSONPB.objectOrNull [encodeResult] options))
                        options
                    else encodeResult options
          )
        ]
    )
  toEncodingPB (CommitInfoResponse f1_or_f2) =
    ( HsJSONPB.pairs
        [ ( let encodeResult =
                  ( case f1_or_f2 of
                      Hs.Just (CommitInfoResponseResultError f1) ->
                        (HsJSONPB.pair "error" f1)
                      Hs.Just (CommitInfoResponseResultEntity f2) ->
                        (HsJSONPB.pair "entity" f2)
                      Hs.Nothing -> Hs.mempty
                  )
             in \options ->
                  if HsJSONPB.optEmitNamedOneof options
                    then ("result" .= (HsJSONPB.pairsOrNull [encodeResult] options)) options
                    else encodeResult options
          )
        ]
    )

instance HsJSONPB.FromJSONPB CommitInfoResponse where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CommitInfoResponse"
        ( \obj ->
            (Hs.pure CommitInfoResponse)
              <*> ( let parseResult parseObj =
                          Hs.msum
                            [ Hs.Just Hs.. CommitInfoResponseResultError
                                <$> (HsJSONPB.parseField parseObj "error"),
                              Hs.Just Hs.. CommitInfoResponseResultEntity
                                <$> (HsJSONPB.parseField parseObj "entity"),
                              Hs.pure Hs.Nothing
                            ]
                     in ( (obj .: "result")
                            Hs.>>= (HsJSONPB.withObject "result" parseResult)
                        )
                          <|> (parseResult obj)
                  )
        )
    )

instance HsJSONPB.ToJSON CommitInfoResponse where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitInfoResponse where
  parseJSON = HsJSONPB.parseJSONPB

data CommitInfoResponse_OldestEntity = CommitInfoResponse_OldestEntity
  { commitInfoResponse_OldestEntityEntity ::
      Hs.Maybe
        Monocle.Protob.Crawler.Entity,
    commitInfoResponse_OldestEntityLastCommitAt ::
      Hs.Maybe
        Google.Protobuf.Timestamp.Timestamp
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitInfoResponse_OldestEntity where
  nameOf _ = (Hs.fromString "CommitInfoResponse_OldestEntity")

instance HsProtobuf.HasDefault CommitInfoResponse_OldestEntity

instance HsProtobuf.Message CommitInfoResponse_OldestEntity where
  encodeMessage
    _
    CommitInfoResponse_OldestEntity
      { commitInfoResponse_OldestEntityEntity =
          commitInfoResponse_OldestEntityEntity,
        commitInfoResponse_OldestEntityLastCommitAt =
          commitInfoResponse_OldestEntityLastCommitAt
      } =
      ( Hs.mconcat
          [ ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( Hs.coerce @(Hs.Maybe Monocle.Protob.Crawler.Entity)
                    @(HsProtobuf.Nested Monocle.Protob.Crawler.Entity)
                    commitInfoResponse_OldestEntityEntity
                )
            ),
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                    @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                    commitInfoResponse_OldestEntityLastCommitAt
                )
            )
          ]
      )
  decodeMessage _ =
    (Hs.pure CommitInfoResponse_OldestEntity)
      <*> ( Hs.coerce @(_ (HsProtobuf.Nested Monocle.Protob.Crawler.Entity))
              @(_ (Hs.Maybe Monocle.Protob.Crawler.Entity))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( Hs.coerce
              @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
              @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Entity")))
          (HsProtobuf.Single "entity")
          []
          ""
      ),
      ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 2)
          ( HsProtobuf.Prim
              ( HsProtobuf.Named
                  ( HsProtobuf.Dots
                      (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"]))
                  )
              )
          )
          (HsProtobuf.Single "last_commit_at")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB CommitInfoResponse_OldestEntity where
  toJSONPB (CommitInfoResponse_OldestEntity f1 f2) =
    (HsJSONPB.object ["entity" .= f1, "last_commit_at" .= f2])
  toEncodingPB (CommitInfoResponse_OldestEntity f1 f2) =
    (HsJSONPB.pairs ["entity" .= f1, "last_commit_at" .= f2])

instance HsJSONPB.FromJSONPB CommitInfoResponse_OldestEntity where
  parseJSONPB =
    ( HsJSONPB.withObject
        "CommitInfoResponse_OldestEntity"
        ( \obj ->
            (Hs.pure CommitInfoResponse_OldestEntity) <*> obj .: "entity"
              <*> obj .: "last_commit_at"
        )
    )

instance HsJSONPB.ToJSON CommitInfoResponse_OldestEntity where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON CommitInfoResponse_OldestEntity where
  parseJSON = HsJSONPB.parseJSONPB

data CommitInfoResponseResult
  = CommitInfoResponseResultError
      ( HsProtobuf.Enumerated
          Monocle.Protob.Crawler.CommitInfoError
      )
  | CommitInfoResponseResultEntity Monocle.Protob.Crawler.CommitInfoResponse_OldestEntity
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named CommitInfoResponseResult where
  nameOf _ = (Hs.fromString "CommitInfoResponseResult")

newtype Project = Project {projectFullPath :: Hs.Text}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named Project where
  nameOf _ = (Hs.fromString "Project")

instance HsProtobuf.HasDefault Project

instance HsProtobuf.Message Project where
  encodeMessage _ Project {projectFullPath = projectFullPath} =
    ( Hs.mconcat
        [ ( HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 1)
              projectFullPath
          )
        ]
    )
  decodeMessage _ =
    (Hs.pure Project)
      <*> ( HsProtobuf.at
              HsProtobuf.decodeMessageField
              (HsProtobuf.FieldNumber 1)
          )
  dotProto _ =
    [ ( HsProtobuf.DotProtoField
          (HsProtobuf.FieldNumber 1)
          (HsProtobuf.Prim HsProtobuf.String)
          (HsProtobuf.Single "full_path")
          []
          ""
      )
    ]

instance HsJSONPB.ToJSONPB Project where
  toJSONPB (Project f1) = (HsJSONPB.object ["full_path" .= f1])
  toEncodingPB (Project f1) = (HsJSONPB.pairs ["full_path" .= f1])

instance HsJSONPB.FromJSONPB Project where
  parseJSONPB =
    ( HsJSONPB.withObject
        "Project"
        (\obj -> (Hs.pure Project) <*> obj .: "full_path")
    )

instance HsJSONPB.ToJSON Project where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON Project where
  parseJSON = HsJSONPB.parseJSONPB

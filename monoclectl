#!/bin/sh -e
# Copyright (C) 2021 Monocle authors
# SPDX-License-Identifier: AGPL-3.0-or-later
#
# A collection of functions to manage monocle service.
# This script is meant to be used by contributors
# as well as containers' entrypoint.

# Default system configuration
ELASTIC_PORT=${ELASTIC_PORT:-9200}
PROM_PORT=${PROM_PORT:-9090}
GRAFANA_PORT=${GRAFANA_PORT:-9030}
MONOCLE_API_PORT=${MONOCLE_API_PORT:-9000}
MONOCLE_WEB_PORT=${MONOCLE_WEB_PORT:-3000}
MONOCLE_LEGACY_PORT=${MONOCLE_LEGACY_PORT:-9876}
ELASTIC_HOST=${ELASTIC_HOST:-localhost}
ELASTIC_CONN=$ELASTIC_HOST:$ELASTIC_PORT
ELASTIC_URL=http://$ELASTIC_CONN
CONFIG=${CONFIG:-$PWD/etc/config.yaml}

if test -e /src/monoclectl; then
    cd /src
fi

ensure_secrets () {
    if ! test -e .secrets; then
        echo CRAWLERS_API_KEY=$(uuidgen) > .secrets
    fi
    export $(cat .secrets) CONFIG
}

ensure_venv () {
    # A function to create the venv for legacy services
    if ! test -d .venv; then
        python3 -mvenv .venv
        ./.venv/bin/pip install --upgrade pip
        ./.venv/bin/pip install -r requirements.txt
    fi

    if ! test -f .venv/bin/monocle; then
        ./.venv/bin/python3 setup.py develop
    fi
}

get_container_runtime () {
    type -p podman || type -p docker
}

case $1 in
    "devel")
        echo './package.dhall True' | dhall-to-yaml > data/monocle-kind.yaml
        kubectl apply -f data/monocle-kind.yaml
        ;;
    "stop")
        kubectl delete -f data/monocle-kind.yaml
        ;;

    # Helpers to manage service manually
    "start-elk")
        IMAGE=$(awk '/docker.elastic/ { print $2 }' docker-compose.yml* | head -n 1 | sed 's/"//g')
        exec $(get_container_runtime) run -it --rm --name elastic \
             --env discovery.type=single-node                     \
             --publish "${ELASTIC_PORT}:9200/tcp"                 \
             -v "$(pwd)/data:/usr/share/elasticsearch/data:Z"     \
             "${IMAGE}"
        ;;
    "start-api")
        cd haskell
        ensure_secrets
        export CONFIG
        exec cabal run exe:monocle-api -- --port $MONOCLE_API_PORT
        ;;
    "start-web")
        cd web
        if ! test -d node_modules; then
            # Ignore-scripts is needed by esbuild
            npm install --ignore-scripts=false
        fi
        exec npm start
        ;;
    "start-api-legacy")
        ensure_secrets
        ensure_venv
        exec ./.venv/bin/uwsgi \
             --http ":${MONOCLE_LEGACY_PORT}" \
             --manage-script-name --mount /app=monocle.webapp:app
        ;;
    "start-crawlers-legacy")
        ensure_secrets
        ensure_venv
        exec ./.venv/bin/monocle \
             --elastic-conn "${ELASTIC_CONN}" \
             crawler --config "${CONFIG}"
        ;;
    "--help")
        echo "usage: $0 devel|deploy|build|stop|start-COMPONENT"
        exit 1
esac

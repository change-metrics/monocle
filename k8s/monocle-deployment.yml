apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: config-data
      name: config-data
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 100Mi
    status: { }
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: elastic-data
      name: elastic-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: { }
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: crawler-dump-data
      name: crawler-dump-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: { }
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: api
      name: api
    spec:
      ports:
        - name: http-rest
          port: 9876
          targetPort: 9876
        - name: websocket
          port: 9877
          targetPort: 9877
      selector:
        io.kompose.service: api
    status:
      loadBalancer: { }
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      ports:
        - name: web-endpoint
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: web
    status:
      loadBalancer: { }
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: elastic
      name: elastic
    spec:
      ports:
        - name: elastic-api
          port: 9200
          protocol: TCP
          targetPort: 9200
      selector:
        io.kompose.service: elastic
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: elastic
      name: elastic
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: elastic
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: elastic
        spec:
          containers:
            - env:
                - name: ES_JAVA_OPTS
                  value: -Xms512m -Xmx512m
                - name: discovery.type
                  value: single-node
              image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
              livenessProbe:
                exec:
                  command:
                    - curl --silent --fail localhost:9200/_cluster/health || exit 1
              name: elastic
              resources: { }
              volumeMounts:
                - mountPath: /usr/share/elasticsearch/data
                  name: elastic-data
          restartPolicy: Always
          volumes:
            - name: elastic-data
              persistentVolumeClaim:
                claimName: elastic-data
    status: { }
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: monocle-k8s-deployment
      namespace: batyam-devel
    data:
      GITHUB_APP_KEY_PATH: '-/etc/monocle/app_key.rsa'
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: web
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: web
        spec:
          containers:
            - env:
                - name: REACT_APP_API_URL
                  value: ${MONOCLE_API_URL:-http://localhost:9876}
                - name: REACT_APP_TITLE
                  value: ${MONOCLE_TITLE:-}
              image: changemetrics/monocle_web:latest
              name: web
              ports:
                - containerPort: 3000
              resources: { }
          restartPolicy: Always
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        io.kompose.service: api
      name: api
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: api
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: api
        spec:
          containers:
            - args:
                - uwsgi
                - --uid
                - guest
                - --gid
                - nogroup
                - --http
                - :9876
                - --socket
                - :9877
                - --manage-script-name
                - --mount
                - /app=monocle.webapp:app
              image: changemetrics/monocle_backend:latest
              livenessProbe:
                exec:
                  command:
                    - python -c "import requests,sys;
                      r=requests.get('http://localhost:9876/api/0/health');
                      print(r.text);
                      sys.exit(1) if r.status_code!=200 else sys.exit(0)"
              name: api
              ports:
                - containerPort: 9876
                - containerPort: 9877
              resources: { }
              volumeMounts:
                - mountPath: /etc/monocle
                  name: config-data
          restartPolicy: Always
          volumes:
            - name: config-data
              persistentVolumeClaim:
                claimName: config-data
    status: { }
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.17.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: crawler
      name: crawler
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: crawler
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: crawler
        spec:
          containers:
            - args:
                - monocle
                - --elastic-conn
                - elastic:9200
                - crawler
                - --config
                - /etc/monocle/config.yaml
              env:
                - name: monocle-k8s-deployment
                    valueFrom:
                      configMapKeyRef:
                        name: monocle-k8s-deployment
                        key: GITHUB_APP_KEY_PATH
              image: changemetrics/monocle_backend:latest
              name: crawler
              resources: { }
              volumeMounts:
                - mountPath: /etc/monocle
                  name: config-data
                - mountPath: /var/lib/crawler
                  name: crawler-dump-data
          restartPolicy: Always
          volumes:
            - name: config-data
              persistentVolumeClaim:
                claimName: config-data
            - name: crawler-dump-data
              persistentVolumeClaim:
                claimName: crawler-dump-data
    status: { }
